@page "/user"

<CruderSimple.Blazor.Components.PageTitle Title="Usuários"
                                            BreadcrumbItems="@(new Breadcrum[] {
                                        new Breadcrum("/", "{{solution_name}}")})" />
                                        
<ListPage 
            TEntity="{{solution_name}}.Domain.Models.Identity.User" 
            TDto="UserDto" 
            CustomSelect="Roles.Role.Name,Roles.Role.Permissions.IsRead,Roles.Role.Permissions.IsWrite,Roles.Role.Permissions.Route.Url">
    <Columns>
        <DataGridColumn TItem="UserDto" Field="@nameof(UserDto.Email)" Caption="Email" Editable Filterable />
        <DataGridColumn TItem="UserDto" Field="@nameof(UserDto.Name)" Caption="Nome" Editable Filterable />
        <DataGridColumn TItem="UserDto" Field="@nameof(UserDto.PhoneNumber)" Caption="Celular" Editable Filterable />
        <DataGridSelectColumn TItem="UserDto" Field="@nameof(UserDto.Roles)" Caption="Cargo" Editable Filterable Sortable="false" ValueField="(x) => ((RoleDto)x).Id" TextField="(x) => ((RoleDto)x).Name" Attributes="RoleDic">
            <DisplayTemplate>
                @foreach (var item in context.Roles?.Select(x => x.Name) ?? new string[0])
                {
                    <Badge Color="Color.Primary" Margin="Margin.Is1.OnX">@item</Badge>
                }
            </DisplayTemplate>
        </DataGridSelectColumn>
    </Columns>
</ListPage>
    
@code {
    [Inject]
    public ICrudService<Role, RoleDto> RoleService { get; set; }
    public Dictionary<string, object> RoleDic { get; set; }

    protected override async Task OnInitializedAsync()
    {
        RoleDic = new Dictionary<string, object>
        {
            { "Field", "Name" },
            { "Service", RoleService },
            { "KeySearch", "Roles.RoleId" },
            { "Default", new RoleDto { Name = "Todos...", Id = string.Empty }}
        };
    }
}